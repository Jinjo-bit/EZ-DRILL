{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><block type=\"v5_events_when_bumper\" id=\"mp@O.ua9s[FUwY3a#AlG\" x=\"510\" y=\"290\"><field name=\"BUMPER\">BumperC</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_control_repeat_until\" id=\"n9rytH!#;uRx$}~j{?Yv\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_bumper\" id=\"z6TKk1D@[c=8NL7_Z-:^\"><field name=\"BUMPER\">BumperB</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_spin\" id=\"mymSJ7eQ973Je0h^(;2K\"><field name=\"MOTOR\">Platform</field><field name=\"DIRECTION\">fwd</field></block></statement></block></next></block><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"190\" y=\"330\"><next><block type=\"v5_control_forever\" id=\"@]%9aiYH`H}c)9N3G@AU\" disabled=\"true\"><statement name=\"SUBSTACK\"><block type=\"v5_motion_spin_at_voltage\" id=\"etPs-?FbZ*-r-bh{VpEW\"><field name=\"MOTOR\">Drill</field><field name=\"DIRECTION\">fwd</field><value name=\"VOLTAGE\"><shadow type=\"math_number\" id=\"NE([(R^=Q=r4|V-[s8/3\"><field name=\"NUM\">10</field></shadow></value><next><block type=\"v5_control_if_then\" id=\"_y[@.iL)cS]o87[CIUxx\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_bumper\" id=\"kwg78H-YNK0K}cMBz(Et\"><field name=\"BUMPER\">BumperA</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_spin\" id=\")lZx1:B8YY^t9-_wM]SJ\"><field name=\"MOTOR\">Drill</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_control_if_then\" id=\"EnM}eF+vM{zp%]T6?F`_\"><value name=\"CONDITION\"><block type=\"v5_sensing_motor_is_spinning\" id=\"/6(VjeaW.Y[drOBraOEl\"><field name=\"MOTOR\">Platform</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_spin\" id=\"nsl5!1(-V`|dyB9A}9Mk\"><field name=\"MOTOR\">Drill</field><field name=\"DIRECTION\">rev</field></block></statement></block></next></block></statement></block></next></block></statement></block></next></block><block type=\"v5_events_when_bumper\" id=\"5!Ux9?1h]iD%j={u%RkG\" x=\"790\" y=\"450\"><field name=\"BUMPER\">BumperB</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_control_repeat_until\" id=\"5s+C{}KnOCcl{1N%0C@2\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_bumper\" id=\")HM]Y^Zh,#IoRU:~JJtf\"><field name=\"BUMPER\">BumperC</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_spin\" id=\"jhM|z#Q:M`[%e-^jZ6TF\"><field name=\"MOTOR\">Platform</field><field name=\"DIRECTION\">rev</field></block></statement></block></next></block><block type=\"v5_events_when_started\" id=\"Zpo.D2cpJqkh?sr;KCy0\" x=\"610\" y=\"730\"><next><block type=\"v5_control_repeat\" id=\"RHkGNbDArQ7v@G9ex$[N\"><value name=\"TIMES\"><shadow type=\"math_whole_number\" id=\"F]/Fw#s|xi_),IYrc:Xx\"><field name=\"NUM\">10</field></shadow></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_spin\" id=\"%V5*:zc{z*h1#4t(:*6c\"><field name=\"MOTOR\">Platform</field><field name=\"DIRECTION\">fwd</field></block></statement></block></next></block></xml>","rconfig":[{"port":[2],"name":"Drill","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio36_1"},"triportSourcePort":22},{"port":[1],"name":"Platform","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio36_1"},"triportSourcePort":22},{"port":[1],"name":"BumperA","customName":false,"deviceType":"Bumper","deviceClass":"bumper","setting":{},"triportSourcePort":22},{"port":[2],"name":"BumperB","customName":false,"deviceType":"Bumper","deviceClass":"bumper","setting":{},"triportSourcePort":22},{"port":[3],"name":"BumperC","customName":false,"deviceType":"Bumper","deviceClass":"bumper","setting":{},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20211210.18.00.00","appVersion":"2.3.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor Drill = motor(PORT2, ratio36_1, false);\n\nmotor Platform = motor(PORT1, ratio36_1, false);\n\nbumper BumperA = bumper(Brain.ThreeWirePort.A);\nbumper BumperB = bumper(Brain.ThreeWirePort.B);\nbumper BumperC = bumper(Brain.ThreeWirePort.C);\n\n\n\n// Generated code.\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable;\n\n// \"when BumperC pressed\" hat block\nvoid onevent_BumperC_pressed_0() {\n  while (!BumperB.pressing()) {\n    Platform.spin(forward);\n  wait(5, msec);\n  }\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  return 0;\n}\n\n// \"when BumperB pressed\" hat block\nvoid onevent_BumperB_pressed_0() {\n  while (!BumperC.pressing()) {\n    Platform.spin(reverse);\n  wait(5, msec);\n  }\n}\n\n// \"when started\" hat block\nint whenStarted2() {\n  repeat(10) {\n    Platform.spin(forward);\n    wait(5, msec);\n  }\n  return 0;\n}\n\n\nint main() {\n  // register event handlers\n  BumperC.pressed(onevent_BumperC_pressed_0);\n  BumperB.pressed(onevent_BumperB_pressed_0);\n\n  wait(15, msec);\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  vex::task ws1(whenStarted2);\n  whenStarted1();\n}","target":"Physical"}